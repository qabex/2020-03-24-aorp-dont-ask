import { delay } from './utils.jsy'
import @{}
  ao_dom, ao_watch
  ao_compute
  ao_watch_compute
from 'roap'

const ao_bango = ao_dom @ '#bango', 'input', elem => + elem.value
const ao_bingo = ao_dom @ '#bingo', 'input', elem => + elem.value
const ao_bongo = ao_dom @ '#bongo', 'input', elem => + elem.value

async function trial_a() ::
  let ao_fn

  if 1 ::
    const bango = await ao_watch @ ao_bango, v => console.log @: bango: v
    const bingo = await ao_watch @ ao_bingo, v => console.log @: bingo: v
    const bongo = await ao_watch @ ao_bongo, v => console.log @: bongo: v

    ao_fn = ao_watch_compute @:
      bango
      bingo
      bongo
  else ::
    ao_fn = ao_watch_compute @:
      bango: ao_bango
      bingo: ao_bingo
      bongo: ao_bongo

  const ao_v = await ao_fn @ awesome

  while true ::
    console.log @ ao_v
    await delay(1000)


async function awesome({bango, bingo, bongo}) ::
  const color = `rgb(${[bango, bingo, bongo]})`
  const e_div = document.querySelector('#output')
  e_div.style.backgroundColor = color
  return color

Promise.resolve().then @ trial_a
